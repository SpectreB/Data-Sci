# -*- coding: utf-8 -*-
"""flowers.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/SpectreB/4f40c9b5c68281580222672cc40483b9/flowers.ipynb
"""

# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
import joblib
from google.colab import files

#Load the data
flowers_data=pd.read_csv('/content/IRIS_ Flower_Dataset.csv')

print(flowers_data.isnull().sum())

flowers_data.columns

# Split the data into features (X) and target variable (y)
X = flowers_data[['sepal_length', 'sepal_width', 'petal_length', 'petal_width']]
y = flowers_data['species']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model 1: Support Vector Machine (SVM)
modelSVM = SVC(kernel='linear', C=1)
# Model 2: Random Forest
modelRF = RandomForestClassifier(n_estimators=100, random_state=42)

# Train the model
modelSVM.fit(X_train,y_train)

# Train the model

modelRF.fit(X_train, y_train)

# Make predictions on the test set
y_predSVM = modelSVM.predict(X_test)
y_predRF = modelRF.predict(X_test)

# Evaluate the model
accuracySVM = accuracy_score(y_test, y_predSVM)
reportSVM = classification_report(y_test, y_predSVM)

accuracyRF = accuracy_score(y_test, y_predRF)
reportRF = classification_report(y_test, y_predRF)

print(f"Accuracy: {accuracySVM:.2f}")
print("\nClassification Report:\n", reportSVM)



print(f"Accuracy: {accuracyRF:.2f}")
print("\nClassification Report:\n", reportRF)

# Save the model
joblib.dump(modelRF, 'flower_classifier_model.pkl')

# Upload the saved model to GitHub
files.download('flower_classifier_model.pkl')

